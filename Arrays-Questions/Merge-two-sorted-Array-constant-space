import java.util.*;

class Codechef {
    public static void swap(int nums1[], int nums2[], int idx1, int idx2) {
        int temp = nums1[idx1];
        nums1[idx1] = nums2[idx2];
        nums2[idx2] = temp;
    }

    public static void mergeSorted(int arr1[], int n, int arr2[], int m) {
        int len = n + m;
        int gap = len / 2 + (len % 2);

        while (gap > 0) {
            int left = 0;
            int right = left + gap;

            while (right < len) {
                if (left < n && right < n) {
                    if (arr1[left] > arr1[right]) {
                        swap(arr1, arr1, left, right);
                    }
                } else if (left < n && right >= n) {
                    if (arr1[left] > arr2[right - n]) {
                        swap(arr1, arr2, left, right - n);
                    }
                } else if (left >= n && right >= n) {
                    if (arr2[left - n] > arr2[right - n]) {
                        swap(arr2, arr2, left - n, right - n);
                    }
                }
                left++;
                right++;
            }

            if (gap == 1) break;
            gap = gap / 2 + gap % 2;
        }

        for (int i = 0; i < m; i++) {
            arr1[n + i] = arr2[i];
        }
    }

    public static void main(String[] args) throws java.lang.Exception {
        int[] arr1 = {1, 4, 7, 0, 0, 0};
        int n = 3;
        int[] arr2 = {2, 5, 6};
        int m = 3;

        mergeSorted(arr1, n, arr2, m);

        System.out.println(Arrays.toString(arr1));
    }
}
